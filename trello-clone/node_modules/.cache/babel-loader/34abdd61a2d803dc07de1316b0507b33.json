{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documents/learningReact/trelloClone/trello-clone/src/components/Board.js\",\n    _s = $RefreshSig$();\n\n// Create the Board component here\nimport React, { useEffect } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\"; // Import the dataset\n\nimport dataset from \"./dataset\"; // Import redux functions and reducers\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAllTasks, setAllColumns, setColumnOrder } from \"./taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const data = useSelector(state => state.task);\n  const dispatch = useDispatch();\n\n  function onDragEnd(result) {} // vai rodar sempre que o dispatch for alterado/utilizado\n\n\n  useEffect(() => {\n    dispatch(setAllTasks({\n      tasks: dataset[\"tasks\"]\n    })); // Initialize the tasks object in redux initial state\n\n    dispatch(setAllColumns({\n      columns: dataset[\"columns\"]\n    })); // Initialize the columns object in redux initial state\n\n    dispatch(setColumnOrder({\n      columnOrder: dataset[\"columnOrder\"]\n    })); // Initialize the columns order in redux initial state\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks Mangement Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableiD: \"all-columns\",\n        direction: \"horizontal\",\n        type: \"column\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          style: {\n            display: \"flex\"\n          },\n          children: [data.columnOrder.map((colId, index) => {\n            // Replace this with the Column component later\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: colId\n            }, colId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 24\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"baHjFRQWbTEQf9QRfrBhqxEE/Ug=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","DragDropContext","Droppable","dataset","useDispatch","useSelector","setAllTasks","setAllColumns","setColumnOrder","Board","data","state","task","dispatch","onDragEnd","result","tasks","columns","columnOrder","textAlign","color","provided","droppableProps","innerRef","display","map","colId","index","placeholder"],"sources":["/home/ana/Documents/learningReact/trelloClone/trello-clone/src/components/Board.js"],"sourcesContent":["// Create the Board component here\nimport React, { useEffect } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\n// Import the dataset\nimport dataset from \"./dataset\";\n\n// Import redux functions and reducers\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAllTasks, setAllColumns, setColumnOrder } from \"./taskSlice\";\n\nfunction Board() {\n  const data = useSelector((state) => state.task);\n  const dispatch = useDispatch();\n\n  function onDragEnd(result) {}\n\n  // vai rodar sempre que o dispatch for alterado/utilizado\n  useEffect(() => {\n    dispatch(setAllTasks({ tasks: dataset[\"tasks\"] })); // Initialize the tasks object in redux initial state\n    dispatch(setAllColumns({ columns: dataset[\"columns\"] })); // Initialize the columns object in redux initial state\n    dispatch(setColumnOrder({ columnOrder: dataset[\"columnOrder\"] })); // Initialize the columns order in redux initial state\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={{ textAlign: \"center\", color: \"white\" }}>\n        <h1>Tasks Mangement Board</h1>\n      </div>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableiD=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {(provided) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              style={{ display: \"flex\" }}\n            >\n              {data.columnOrder.map((colId, index) => {\n                // Replace this with the Column component later\n                return <h1 key={colId}>{colId}</h1>;\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n}\n\nexport default Board;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,cAArC,QAA2D,aAA3D;;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;EAEA,SAASU,SAAT,CAAmBC,MAAnB,EAA2B,CAAE,CAJd,CAMf;;;EACAf,SAAS,CAAC,MAAM;IACda,QAAQ,CAACP,WAAW,CAAC;MAAEU,KAAK,EAAEb,OAAO,CAAC,OAAD;IAAhB,CAAD,CAAZ,CAAR,CADc,CACsC;;IACpDU,QAAQ,CAACN,aAAa,CAAC;MAAEU,OAAO,EAAEd,OAAO,CAAC,SAAD;IAAlB,CAAD,CAAd,CAAR,CAFc,CAE4C;;IAC1DU,QAAQ,CAACL,cAAc,CAAC;MAAEU,WAAW,EAAEf,OAAO,CAAC,aAAD;IAAtB,CAAD,CAAf,CAAR,CAHc,CAGqD;EACpE,CAJQ,EAIN,CAACU,QAAD,CAJM,CAAT;EAMA,oBACE;IAAA,wBACE;MAAK,KAAK,EAAE;QAAEM,SAAS,EAAE,QAAb;QAAuBC,KAAK,EAAE;MAA9B,CAAZ;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,eAAD;MAAiB,SAAS,EAAEN,SAA5B;MAAA,uBACE,QAAC,SAAD;QACE,WAAW,EAAC,aADd;QAEE,SAAS,EAAC,YAFZ;QAGE,IAAI,EAAC,QAHP;QAAA,UAKIO,QAAD,iBACC,oBACMA,QAAQ,CAACC,cADf;UAEE,GAAG,EAAED,QAAQ,CAACE,QAFhB;UAGE,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAX,CAHT;UAAA,WAKGd,IAAI,CAACQ,WAAL,CAAiBO,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;YACtC;YACA,oBAAO;cAAA,UAAiBD;YAAjB,GAASA,KAAT;cAAA;cAAA;cAAA;YAAA,QAAP;UACD,CAHA,CALH,EASGL,QAAQ,CAACO,WATZ;QAAA;UAAA;UAAA;UAAA;QAAA;MANJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AA6BD;;GA1CQnB,K;UACMJ,W,EACID,W;;;KAFVK,K;AA4CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}