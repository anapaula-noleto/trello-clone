{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documents/learningReact/trelloClone/trello-clone/src/components/Column.js\",\n    _s = $RefreshSig$();\n\n// Create the Column component here\nimport React, { useEffect } from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Column(_ref) {\n  _s();\n\n  let {\n    colId,\n    index\n  } = _ref;\n  const data = useSelector(state => state.task);\n\n  function RenderColumnTasks() {\n    const currColTasks = data.columns[colId].taskIds.map(taskId => data.tasks[taskId]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currColTasks.map((task, index) => {\n        // Replace this with the TaskCard component later\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: task.taskTitle\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: colId,\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        className: \"column-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-title-edit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"column-title\",\n            children: data.columns[colId].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: colId,\n          type: \"task\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"task-list\",\n            children: [/*#__PURE__*/_jsxDEV(RenderColumnTasks, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Column, \"0jBbmNjfXnGYIThfZPLXiFYV2+k=\", false, function () {\n  return [useSelector];\n});\n\n_c = Column;\nexport default Column;\n\nvar _c;\n\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useEffect","Draggable","Droppable","useDispatch","useSelector","Column","colId","index","data","state","task","RenderColumnTasks","currColTasks","columns","taskIds","map","taskId","tasks","taskTitle","id","provided","innerRef","draggableProps","title","droppableProps","placeholder"],"sources":["/home/ana/Documents/learningReact/trelloClone/trello-clone/src/components/Column.js"],"sourcesContent":["// Create the Column component here\n\nimport React, { useEffect } from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Column({ colId, index }) {\n  const data = useSelector((state) => state.task);\n\n  function RenderColumnTasks() {\n    const currColTasks = data.columns[colId].taskIds.map(\n      (taskId) => data.tasks[taskId],\n    );\n\n    return (\n      <>\n        {currColTasks.map((task, index) => {\n          // Replace this with the TaskCard component later\n          return <h1 key={task.id}>{task.taskTitle}</h1>;\n        })}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Draggable draggableId={colId} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            className=\"column-container\"\n          >\n            <div className=\"task-title-edit-container\">\n              <span className=\"column-title\">{data.columns[colId].title}</span>\n            </div>\n            <Droppable droppableId={colId} type=\"task\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className=\"task-list\"\n                >\n                  <RenderColumnTasks />\n                  {provided.placeholder}\n\n                  {/* Add the TaskAddButton component here */}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )}\n      </Draggable>\n    </>\n  );\n}\n\nexport default Column;\n"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,SAASC,MAAT,OAAkC;EAAA;;EAAA,IAAlB;IAAEC,KAAF;IAASC;EAAT,CAAkB;EAChC,MAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;;EAEA,SAASC,iBAAT,GAA6B;IAC3B,MAAMC,YAAY,GAAGJ,IAAI,CAACK,OAAL,CAAaP,KAAb,EAAoBQ,OAApB,CAA4BC,GAA5B,CAClBC,MAAD,IAAYR,IAAI,CAACS,KAAL,CAAWD,MAAX,CADO,CAArB;IAIA,oBACE;MAAA,UACGJ,YAAY,CAACG,GAAb,CAAiB,CAACL,IAAD,EAAOH,KAAP,KAAiB;QACjC;QACA,oBAAO;UAAA,UAAmBG,IAAI,CAACQ;QAAxB,GAASR,IAAI,CAACS,EAAd;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAHA;IADH,iBADF;EAQD;;EAED,oBACE;IAAA,uBACE,QAAC,SAAD;MAAW,WAAW,EAAEb,KAAxB;MAA+B,KAAK,EAAEC,KAAtC;MAAA,UACIa,QAAD,iBACC;QACE,GAAG,EAAEA,QAAQ,CAACC,QADhB;QAAA,GAEMD,QAAQ,CAACE,cAFf;QAGE,SAAS,EAAC,kBAHZ;QAAA,wBAKE;UAAK,SAAS,EAAC,2BAAf;UAAA,uBACE;YAAM,SAAS,EAAC,cAAhB;YAAA,UAAgCd,IAAI,CAACK,OAAL,CAAaP,KAAb,EAAoBiB;UAApD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QALF,eAQE,QAAC,SAAD;UAAW,WAAW,EAAEjB,KAAxB;UAA+B,IAAI,EAAC,MAApC;UAAA,UACIc,QAAD,iBACC;YACE,GAAG,EAAEA,QAAQ,CAACC,QADhB;YAAA,GAEMD,QAAQ,CAACI,cAFf;YAGE,SAAS,EAAC,WAHZ;YAAA,wBAKE,QAAC,iBAAD;cAAA;cAAA;cAAA;YAAA,QALF,EAMGJ,QAAQ,CAACK,WANZ;UAAA;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA+BD;;GAjDQpB,M;UACMD,W;;;KADNC,M;AAmDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}