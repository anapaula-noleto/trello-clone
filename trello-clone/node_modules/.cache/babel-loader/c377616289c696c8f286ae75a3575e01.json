{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: {},\n  columns: {},\n  columnOrder: [],\n  currTaskIdToEdit: \"\",\n  currColIdToEdit: \"\",\n  isDialogOpen: false\n}; // actions: are payloads of information that describe changes to the application state.\n\nexport const taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    /* Default reducers start */\n    // Sets \"currTaskIdToEdit\" to the id of the current task being edited\n    setCurrTaskIdToEdit: (state, action) => {\n      state.currTaskIdToEdit = action.payload.taskId;\n    },\n    // Sets \"currColIdToEdit\" to the id of the current column in which the task is being edited\n    setCurrColIdToEdit: (state, action) => {\n      state.currColIdToEdit = action.payload.currTaskColId;\n    },\n    // Changes the state of the edit dialog box between open and close\n    setDialogStatus: (state, action) => {\n      state.isDialogOpen = action.payload;\n    },\n\n    /* Default reducers end */\n    // Add new reducers here\n    setAllTasks: (state, action) => {}\n  }\n});\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","columns","columnOrder","currTaskIdToEdit","currColIdToEdit","isDialogOpen","taskSlice","name","reducers","setCurrTaskIdToEdit","state","action","payload","taskId","setCurrColIdToEdit","currTaskColId","setDialogStatus","setAllTasks","reducer"],"sources":["/home/ana/Documents/learningReact/trelloClone/trello-clone/src/components/taskSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  tasks: {},\n  columns: {},\n  columnOrder: [],\n  currTaskIdToEdit: \"\",\n  currColIdToEdit: \"\",\n  isDialogOpen: false,\n};\n\n// actions: are payloads of information that describe changes to the application state.\n\nexport const taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    /* Default reducers start */\n    // Sets \"currTaskIdToEdit\" to the id of the current task being edited\n    setCurrTaskIdToEdit: (state, action) => {\n      state.currTaskIdToEdit = action.payload.taskId;\n    },\n    // Sets \"currColIdToEdit\" to the id of the current column in which the task is being edited\n    setCurrColIdToEdit: (state, action) => {\n      state.currColIdToEdit = action.payload.currTaskColId;\n    },\n    // Changes the state of the edit dialog box between open and close\n    setDialogStatus: (state, action) => {\n      state.isDialogOpen = action.payload;\n    },\n    /* Default reducers end */\n\n    // Add new reducers here\n    setAllTasks: (state, action) => {},\n  },\n});\n\nexport default taskSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,OAAO,EAAE,EAFU;EAGnBC,WAAW,EAAE,EAHM;EAInBC,gBAAgB,EAAE,EAJC;EAKnBC,eAAe,EAAE,EALE;EAMnBC,YAAY,EAAE;AANK,CAArB,C,CASA;;AAEA,OAAO,MAAMC,SAAS,GAAGR,WAAW,CAAC;EACnCS,IAAI,EAAE,MAD6B;EAEnCR,YAFmC;EAGnCS,QAAQ,EAAE;IACR;IACA;IACAC,mBAAmB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACtCD,KAAK,CAACP,gBAAN,GAAyBQ,MAAM,CAACC,OAAP,CAAeC,MAAxC;IACD,CALO;IAMR;IACAC,kBAAkB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACrCD,KAAK,CAACN,eAAN,GAAwBO,MAAM,CAACC,OAAP,CAAeG,aAAvC;IACD,CATO;IAUR;IACAC,eAAe,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAClCD,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;IACD,CAbO;;IAcR;IAEA;IACAK,WAAW,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB,CAAE;EAjB1B;AAHyB,CAAD,CAA7B;AAwBP,eAAeL,SAAS,CAACY,OAAzB"},"metadata":{},"sourceType":"module"}